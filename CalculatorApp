import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CalculatorApp extends JFrame implements ActionListener {
    // Components
    private JTextField displayField;
    private JButton[] numberButtons;
    private JButton[] operatorButtons;
    private JButton clearButton;
    private JButton equalsButton;

    // Variables
    private double num1, num2;
    private char operator;

    public CalculatorApp() {
        // Frame setup
        setTitle("Simple Calculator");
        setSize(300, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Display field
        displayField = new JTextField();
        displayField.setEditable(false);
        add(displayField, BorderLayout.NORTH);

        // Number buttons
        JPanel numbersPanel = new JPanel(new GridLayout(4, 3));
        numberButtons = new JButton[10];
        for (int i = 0; i < 10; i++) {
            numberButtons[i] = new JButton(String.valueOf(i));
            numberButtons[i].addActionListener(this);
            numbersPanel.add(numberButtons[i]);
        }
        add(numbersPanel, BorderLayout.CENTER);

        // Operator buttons
        JPanel operatorsPanel = new JPanel(new GridLayout(5, 1));
        operatorButtons = new JButton[5];
        operatorButtons[0] = new JButton("+");
        operatorButtons[1] = new JButton("-");
        operatorButtons[2] = new JButton("*");
        operatorButtons[3] = new JButton("/");
        operatorButtons[4] = new JButton("%");
        for (int i = 0; i < 5; i++) {
            operatorButtons[i].addActionListener(this);
            operatorsPanel.add(operatorButtons[i]);
        }
        add(operatorsPanel, BorderLayout.EAST);

        // Clear and equals buttons
        JPanel controlPanel = new JPanel(new GridLayout(1, 2));
        clearButton = new JButton("C");
        equalsButton = new JButton("=");
        clearButton.addActionListener(this);
        equalsButton.addActionListener(this);
        controlPanel.add(clearButton);
        controlPanel.add(equalsButton);
        add(controlPanel, BorderLayout.SOUTH);

        // Initialize variables
        num1 = 0.0;
        num2 = 0.0;
        operator = ' ';

        // Show the frame
        setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        if (command.equals("C")) {
            // Clear the display and reset variables
            displayField.setText("");
            num1 = 0.0;
            num2 = 0.0;
            operator = ' ';
        } else if (command.equals("=")) {
            // Calculate result based on current operator
            num2 = Double.parseDouble(displayField.getText());
            double result = calculate(num1, num2, operator);
            displayField.setText(String.valueOf(result));
            num1 = result;
            num2 = 0.0;
            operator = ' ';
        } else if (command.equals("+") || command.equals("-") || command.equals("*") || command.equals("/") || command.equals("%")) {
            // Set operator for calculation
            operator = command.charAt(0);
            num1 = Double.parseDouble(displayField.getText());
            displayField.setText("");
        } else {
            // Append digit to display
            displayField.setText(displayField.getText() + command);
        }
    }

    private double calculate(double num1, double num2, char operator) {
        switch (operator) {
            case '+':
                return num1 + num2;
            case '-':
                return num1 - num2;
            case '*':
                return num1 * num2;
            case '/':
                if (num2 != 0)
                    return num1 / num2;
                else
                    throw new ArithmeticException("Cannot divide by zero");
            case '%':
                return num1 % num2;
            default:
                throw new IllegalArgumentException("Invalid operator");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new CalculatorApp());
    }
}
